name: Recipe Website CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  SERVICE_NAME: recipe-website
  REGION: asia-southeast1

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: rootpassword
          MYSQL_DATABASE: recipedb_test
          MYSQL_USER: recipeadmin
          MYSQL_PASSWORD: kod12345
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v4

    - name: Validate composer.json and composer.lock
      run: composer validate --strict

    - name: Get composer cache directory
      id: composer-cache
      run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'
        extensions: mbstring, xml, gd, pdo_mysql
        coverage: xdebug
        tools: composer:v2

    - name: Install Composer dependencies
      run: composer install --prefer-dist --no-progress

    - name: Wait for MySQL to be ready
      run: |
        echo "Waiting for MySQL to be fully ready..."
        for i in $(seq 1 60); do
          if mysqladmin ping -h mysql --silent; then
            echo "MySQL is ready!"
            break
          fi
          echo "Still waiting for MySQL... ($i/60)"
          sleep 1
        done
        mysqladmin ping -h mysql || { echo "MySQL did not become ready in time!"; exit 1; }
      env:
        MYSQL_PWD: rootpassword

    - name: Debug MySQL Service Network # <--- TAMBAHKAN LANGKAH INI
      # Jalankan hanya jika langkah sebelumnya (Wait for MySQL) berhasil
      run: |
        echo "--- Pinging MySQL Host ---"
        ping -c 5 mysql
        echo "--- Checking MySQL Container IP ---"
        getent hosts mysql # Mencoba resolusi nama dari dalam runner
        echo "--- Checking MySQL Container Logs ---"
        docker logs mysql # Mengambil log dari container MySQL
      continue-on-error: true # Agar workflow tetap lanjut meskipun debug ini gagal

    - name: Create test database and import schema
      run: |
        # Gunakan 'mysql' sebagai host untuk konsistensi
        mysql -h mysql -u root -prootpassword recipedb_test < recipedb.sql

    - name: Run PHPUnit tests
      run: |
        ./vendor/bin/phpunit --coverage-text --coverage-clover=coverage.xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: true

    - name: PHP Syntax Check
      run: find . -type f -name "*.php" -exec php -l {} \;

    - name: PHP Code Sniffer
      run: |
        ./vendor/bin/phpcs --standard=PSR12 --extensions=php .

    - name: PHP Mess Detector
      run: |
        ./vendor/bin/phpmd . text cleancode,codesize,controversial,design,naming,unusedcode